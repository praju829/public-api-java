# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'compile'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false  

- task: dependency-check-build-task@6
  inputs:
    projectName: 'public-api-java'
    scanPath: '/home/vsts/work/1/s/target'
    format: 'HTML'

- task: SnykSecurityScan@1
  inputs:
    serviceConnectionEndpoint: 'snyk'
    testType: 'app'
    monitorWhen: 'always'
    failOnIssues: false 

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'azuredevops-sonarcloud-conn'
    organization: 'prajktamhapsekar829'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'prajktamhapsekar829'
    cliProjectName: 'public-api-java'
    cliSources: '.'
    extraProperties: |
      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin 
      sonar.java.binaries=. 
- task: SonarCloudAnalyze@1 
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'